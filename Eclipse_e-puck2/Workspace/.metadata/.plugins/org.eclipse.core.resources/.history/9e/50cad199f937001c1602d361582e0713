#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#include "ch.h"
#include "hal.h"
#include "memory_protection.h"
#include <main.h>
#include "leds.h"
#include "spi_comm.h"
#include "sensors/proximity.h"
#include "epuck1x/uart/e_uart_char.h"
#include "stdio.h"
#include "serial_comm.h"
#include "leds.h"
#include "spi_comm.h"
#include "motors.h"

messagebus_t bus;
MUTEX_DECL(bus_lock);
CONDVAR_DECL(bus_condvar);

void turn_left(void)
{
	left_motor_set_speed(-200);
	right_motor_set_speed(200);
}

void turn_right(void)
{
	left_motor_set_speed(200);
	right_motor_set_speed(-200);
}

void move_forward(void)
{
	left_motor_set_speed(200);
	right_motor_set_speed(200);
}

void stop(void)
{
	left_motor_set_speed(0);
	right_motor_set_speed(0);
}

int main(void)
{

    halInit();
    chSysInit();
    mpu_init();
    messagebus_init(&bus,&bus_lock,&bus_condvar);
    clear_leds();
    spi_comm_start();
    serial_start();
    proximity_start();
    calibrate_ir();
    motors_init();


    /* Infinite loop. */
    while (1) {
    	//waits 1 second

    	/*char str[100];
    	int str_length;
    	int sensor1=get_calibrated_prox(0);
    	int sensor8=get_calibrated_prox(7);
    	str_length=sprintf(str,"Reading from Sensor 0 is %d\n:",sensor1);
    	e_send_uart1_char(str,str_length);*/
    	int sensor1=get_calibrated_prox(0);
    	int sensor8=get_calibrated_prox(7);
    	if (sensor1>500 || sensor8>500)
    	{
    		turn_right();
			chThdSleepMilliseconds(500);

    	}
    	else
    	{
    		move_forward();
    		chThdSleepMilliseconds(500);
    	}





    }
}

#define STACK_CHK_GUARD 0xe2dee396
uintptr_t __stack_chk_guard = STACK_CHK_GUARD;

void __stack_chk_fail(void)
{
    chSysHalt("Stack smashing detected");
}
